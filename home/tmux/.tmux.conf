# Use <prefix>c to create a new window at the current path
bind c new-window -c "#{pane_current_path}"

# Let 'v' in copy mode begin a visual selection
bind-key -T copy-mode-vi 'v' send -X begin-selection
# Let 'y' in copy mode copy the current selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

bind-key R source-file ~/.tmux.conf \; \
       display-message "source-file done"

# Open up fzf session picker in a popup window when cking <Prefix>-J
bind s display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# <Prefix>/ goes into copy mode and begins searching upwards
bind-key / copy-mode \; send-key ?

setw -g mode-keys vi
# This is necessary for some color schemes to work properly
set -ga terminal-overrides ',xterm-256color:Tc'

# ---- vim-tmux-navigator ----
# I added this manually so that I could modify the logic to NOT perform the
# navigation under certain circumstances (for example, I want to execute <C-j>
# in lazygit and have it perform that action described in lazygit instead
# of navigating me out of the window.

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# If you need to test this out you can get the current pane tty by running
# :run 'echo #{pane_tty}'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|lazygit|fzf)(diff)?$'"
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# ----- DESIGN CHANGES -----

# Pane styling
set -g pane-border-style bg=colour235
set -g pane-border-style fg=colour238
set -g pane-active-border-style bg=colour236
set -g pane-active-border-style fg=colour51

# Status bar styling
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-style dim
set -g status-left ' #S '
set -g status-right '#{prefix_highlight} #[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 150
set -g status-left-length 20

# Window status styling
setw -g window-status-current-style fg=colour81
setw -g window-status-current-style bg=colour238
setw -g window-status-current-style bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style fg=colour138
setw -g window-status-style bg=colour235
setw -g window-status-style none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style bold
setw -g window-status-bell-style fg=colour255
setw -g window-status-bell-style bg=colour1

# Window mode styling
setw -g mode-style bg=colour6
setw -g mode-style fg=colour0

# Turn off noise
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none


# Message styling
set -g message-style fg=colour232
set -g message-style bg=colour166
set -g message-style bold
set -g mode-style 'bg=#444444,fg=#e0e2e1,noreverse'

# ----- TMUX PLUGIN MANAGER -----
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# tmux-sensible adds some simple keybindings and configuration tht make working
# in tmux more sensible :)
set -g @plugin 'tmux-plugins/tmux-sensible'
# tmux-prefix-highlight adds an indicator when the tmux prefix key is triggered
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# tmux-pain-control adds bindings for making managing panes/windows easier
set -g @plugin 'tmux-plugins/tmux-pain-control'
# vim-tmux-navigator provides smart pane switching with awareness of Vim splits.
# commenting this out because I added it manually above
# set -g @plugin 'christoomey/vim-tmux-navigator'
# tmux-resurrect allows saving and restoring the current tmux state
set -g @plugin 'tmux-plugins/tmux-resurrect'
# tmux-continuum automatically backs up tmux state so that you don't have to
# remember to regularly save it (via tmux-resurrect)
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
# Click `u` to highlight all visible urls, and then select which one you would
# like to open. This requires the urlview or extract_url os tools as well.
set -g @plugin 'tmux-plugins/tmux-urlview'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Jump to last active session. This overrides the <prefix>L binding that
# tmux-pain-control defines.
bind L switch-client -l
